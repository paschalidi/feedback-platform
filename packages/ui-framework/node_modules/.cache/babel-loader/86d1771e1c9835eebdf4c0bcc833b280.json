{"ast":null,"code":"import _defineProperty from \"/Users/paschalidi/dev/feedback-platform/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar fieldValue = function fieldValue(target) {\n  var type = target.type,\n      checked = target.checked,\n      value = target.value,\n      id = target.id;\n\n  switch (type) {\n    case \"checkbox\":\n      return _defineProperty({}, id, checked);\n\n    case \"button\":\n    case \"submit\":\n    case \"reset\":\n      return {};\n\n    default:\n      return _defineProperty({}, id, value);\n  }\n};\n\nexport default function formData(elements) {\n  var data = {};\n  Array.from(elements).forEach(function (element) {\n    data = _objectSpread({}, data, {}, fieldValue(element));\n  });\n  return data;\n}","map":{"version":3,"sources":["/Users/paschalidi/dev/feedback-platform/packages/ui-framework/src/utils/formData.js"],"names":["fieldValue","target","type","checked","value","id","formData","elements","data","Array","from","forEach","element"],"mappings":";;;;;;AAAA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAAAC,MAAM,EAAI;AAAA,MACnBC,IADmB,GACUD,MADV,CACnBC,IADmB;AAAA,MACbC,OADa,GACUF,MADV,CACbE,OADa;AAAA,MACJC,KADI,GACUH,MADV,CACJG,KADI;AAAA,MACGC,EADH,GACUJ,MADV,CACGI,EADH;;AAE3B,UAAQH,IAAR;AACE,SAAK,UAAL;AACE,iCAAUG,EAAV,EAAeF,OAAf;;AACF,SAAK,QAAL;AACA,SAAK,QAAL;AACA,SAAK,OAAL;AACE,aAAO,EAAP;;AACF;AACE,iCAAUE,EAAV,EAAeD,KAAf;AARJ;AAUD,CAZD;;AAcA,eAAe,SAASE,QAAT,CAAkBC,QAAlB,EAA4B;AACzC,MAAIC,IAAI,GAAG,EAAX;AAEAC,EAAAA,KAAK,CAACC,IAAN,CAAWH,QAAX,EAAqBI,OAArB,CAA6B,UAAAC,OAAO,EAAI;AACtCJ,IAAAA,IAAI,qBAAQA,IAAR,MAAiBR,UAAU,CAACY,OAAD,CAA3B,CAAJ;AACD,GAFD;AAIA,SAAOJ,IAAP;AACD","sourcesContent":["const fieldValue = target => {\n  const { type, checked, value, id } = target;\n  switch (type) {\n    case \"checkbox\":\n      return { [id]: checked };\n    case \"button\":\n    case \"submit\":\n    case \"reset\":\n      return {};\n    default:\n      return { [id]: value };\n  }\n};\n\nexport default function formData(elements) {\n  let data = {};\n\n  Array.from(elements).forEach(element => {\n    data = { ...data, ...fieldValue(element) };\n  });\n\n  return data;\n}\n"]},"metadata":{},"sourceType":"module"}