{"ast":null,"code":"import _defineProperty from \"/Users/paschalidi/dev/feedback-platform/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/paschalidi/dev/feedback-platform/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/paschalidi/dev/feedback-platform/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/paschalidi/dev/feedback-platform/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/paschalidi/dev/feedback-platform/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/paschalidi/dev/feedback-platform/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/paschalidi/dev/feedback-platform/packages/ui-framework/src/Forms/Validation.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { createContext, Component } from \"react\";\nimport Schema from \"async-validator\";\nimport PropTypes from \"prop-types\";\nvar DEFAULT_STATE = {\n  errors: {},\n  validate: function validate() {},\n  cleanField: function cleanField() {}\n};\nexport var ValidationContext = createContext(DEFAULT_STATE);\n\nvar Validation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Validation, _Component);\n\n  function Validation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Validation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Validation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = DEFAULT_STATE;\n\n    _this.validate = function (fields, rules) {\n      var schema = new Schema(rules);\n      var validation = {};\n      schema.validate(fields, function (validateErr) {\n        if (validateErr) {\n          validation = validateErr.reduce(function (prev, error) {\n            return _objectSpread({}, prev, _defineProperty({}, error.field, error.message));\n          }, {});\n        }\n      });\n      return validation;\n    };\n\n    _this.validateForm = function (fields, input) {\n      var rules = _this.props.rules;\n      var errors = _this.state.errors;\n\n      var validation = _this.validate(fields, rules);\n\n      var inputErrors = input ? _defineProperty({}, input, validation[input]) : validation;\n\n      var allErrors = _objectSpread({}, errors, {}, inputErrors);\n\n      var hasErrors = Object.keys(allErrors).some(function (message) {\n        return allErrors[message];\n      });\n\n      _this.setState({\n        errors: allErrors\n      });\n\n      return hasErrors;\n    };\n\n    _this.cleanField = function (input) {\n      var errors = _this.state.errors;\n\n      var cleanError = input && _defineProperty({}, input, \"\");\n\n      var allErrors = _objectSpread({}, errors, {}, cleanError);\n\n      var hasErrors = Object.keys(allErrors).some(function (message) {\n        return allErrors[message];\n      });\n\n      _this.setState({\n        errors: allErrors\n      });\n\n      return hasErrors;\n    };\n\n    return _this;\n  }\n\n  _createClass(Validation, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var errors = this.state.errors;\n      return React.createElement(ValidationContext.Provider, {\n        value: {\n          validate: this.validateForm,\n          cleanField: this.cleanField,\n          errors: errors\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, children);\n    }\n  }]);\n\n  return Validation;\n}(Component);\n\nexport { Validation as default };\nValidation.propTypes = {\n  children: PropTypes.node.isRequired,\n  rules: PropTypes.shape({}).isRequired\n};","map":{"version":3,"sources":["/Users/paschalidi/dev/feedback-platform/packages/ui-framework/src/Forms/Validation.jsx"],"names":["React","createContext","Component","Schema","PropTypes","DEFAULT_STATE","errors","validate","cleanField","ValidationContext","Validation","state","fields","rules","schema","validation","validateErr","reduce","prev","error","field","message","validateForm","input","props","inputErrors","allErrors","hasErrors","Object","keys","some","setState","cleanError","children","propTypes","node","isRequired","shape"],"mappings":"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","sourcesContent":["import React, { createContext, Component } from \"react\";\nimport Schema from \"async-validator\";\nimport PropTypes from \"prop-types\";\n\nconst DEFAULT_STATE = {\n  errors: {},\n  validate: () => {},\n  cleanField: () => {}\n};\n\nexport const ValidationContext = createContext(DEFAULT_STATE);\n\nexport default class Validation extends Component {\n  state = DEFAULT_STATE;\n\n  validate = (fields, rules) => {\n    const schema = new Schema(rules);\n    let validation = {};\n\n    schema.validate(fields, validateErr => {\n      if (validateErr) {\n        validation = validateErr.reduce(\n          (prev, error) => ({ ...prev, [error.field]: error.message }),\n          {}\n        );\n      }\n    });\n\n    return validation;\n  };\n\n  validateForm = (fields, input) => {\n    const { rules } = this.props;\n    const { errors } = this.state;\n    const validation = this.validate(fields, rules);\n    const inputErrors = input ? { [input]: validation[input] } : validation;\n    const allErrors = { ...errors, ...inputErrors };\n    const hasErrors = Object.keys(allErrors).some(\n      message => allErrors[message]\n    );\n\n    this.setState({ errors: allErrors });\n\n    return hasErrors;\n  };\n\n  cleanField = input => {\n    const { errors } = this.state;\n    const cleanError = input && { [input]: \"\" };\n    const allErrors = { ...errors, ...cleanError };\n    const hasErrors = Object.keys(allErrors).some(\n      message => allErrors[message]\n    );\n\n    this.setState({ errors: allErrors });\n\n    return hasErrors;\n  };\n\n  render() {\n    const { children } = this.props;\n    const { errors } = this.state;\n\n    return (\n      <ValidationContext.Provider\n        value={{\n          validate: this.validateForm,\n          cleanField: this.cleanField,\n          errors\n        }}\n      >\n        {children}\n      </ValidationContext.Provider>\n    );\n  }\n}\n\nValidation.propTypes = {\n  children: PropTypes.node.isRequired,\n  rules: PropTypes.shape({}).isRequired\n};\n"]},"metadata":{},"sourceType":"module"}